module Euler.P040.Problem044
  ( prob044
  )
  where

{-
 - Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2.
 - The first ten pentagonal numbers are:
 -
 - 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
 -
 - It can be seen that P4 + P7 = 22 + 70 = 92 = P8.
 - However, their difference, 70 − 22 = 48, is not pentagonal.
 -
 - Find the pair of pentagonal numbers, Pj and Pk, for which their
 - sum and difference are pentagonal and D = |Pk − Pj| is minimised;
 - what is the value of D?
 -}

import Data.Maybe    (isJust, fromJust)
import Control.Monad (guard)
import Euler.P000.Problem009 (toInt)

prob044 :: Integer
prob044 = prob044'

-- naive method

prob044' :: Integer
prob044' = head $ do
  a <- [1..]
  b <- [1..a]
  let x = f a + f b
      mc = isPentagonal x
  guard (isJust mc)
  let c = fromJust mc
      z = f b + f c
      md = isPentagonal z
  guard (isJust md)
  return $ f a
    where
      f = (pentagonals !!)
      pentagonals = 0 : fmap (\n -> n * (3 * n - 1) `div` 2) [1..]
      isPentagonal :: Integer -> Maybe Int
      isPentagonal n = toInt ((sqrt (24 * (fromIntegral n :: Double) + 1) + 1) / 6)
