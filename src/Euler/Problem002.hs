module Euler.Problem002
  ( prob002
  )
  where

{- Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 - By starting with 1 and 2, the first 10 terms will be:
 -
 - 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 -
 - By considering the terms in the Fibonacci sequence whose values do not exceed four million,
 - find the sum of the even-valued terms. -}

prob002 :: Integer
prob002 = prob002' 4e6

-- naive method

prob002' :: Integer -> Integer
prob002' bound = sum . takeWhile (< bound) . filter even $ fibs

fibs :: [Integer]
fibs = let fibs' = 0 : scanl (+) 1 fibs' in fibs'


-- faster calculations

prob002'' = undefined
